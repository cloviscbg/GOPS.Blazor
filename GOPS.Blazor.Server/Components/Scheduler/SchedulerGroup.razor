<MudExpansionPanels @ref="mudExpansionPanels"
					MultiExpansion="true"
					Elevation="0"
					Class="scheduler-groups"
					Style="-webkit-tap-highlight-color: transparent">
	@foreach (var group in Groups ?? Enumerable.Empty<T>())
	{
		<MudExpansionPanel @key="group"
						   HideIcon="true"
						   Class="mt-4">
			<TitleContent>
				@TitleContent?.Invoke(group)
			</TitleContent>

			<ChildContent>
				@ShiftContent?.Invoke(group)
			</ChildContent>
		</MudExpansionPanel>
	}
</MudExpansionPanels>


@namespace GOPS.Blazor.Server.Components.Internal
@typeparam T


@code {
	MudExpansionPanels? mudExpansionPanels;

	[CascadingParameter]
	Scheduler? Scheduler { get; set; }

	[Parameter]
	public IEnumerable<T>? Groups { get; set; }

	[Parameter]
	public RenderFragment<T>? TitleContent { get; set; }

	[Parameter]
	public RenderFragment<T>? ShiftContent { get; set; }

	public void ExpandGroups(bool expand)
	{
		if (expand)
		{
			mudExpansionPanels?.ExpandAll();
			return;
		}

		mudExpansionPanels?.CollapseAll();
	}
}
